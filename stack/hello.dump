
hello:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 47 ac             	add    %al,-0x54(%rdi)
 36a:	f4                   	hlt    
 36b:	cb                   	lret   
 36c:	fa                   	cli    
 36d:	f9                   	stc    
 36e:	a9 f8 84 a8 2a       	test   $0x2aa884f8,%eax
 373:	f9                   	stc    
 374:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 375:	2a 23                	sub    (%rbx),%ah
 377:	59                   	pop    %rcx
 378:	db 14 89             	fistl  (%rcx,%rcx,4)
 37b:	38                   	.byte 0x38

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	07                   	(bad)  
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 07                	add    %al,(%rdi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	0b 00                	or     (%rax),%eax
 3e2:	00 00                	add    %al,(%rax)
 3e4:	20 00                	and    %al,(%rax)
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	5f                   	pop    %rdi
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 75 00             	add    %dh,0x0(%rbp)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	27                   	(bad)  
 429:	00 00                	add    %al,(%rax)
 42b:	00 20                	add    %ah,(%rax)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 36                	add    %dh,(%rsi)
 441:	00 00                	add    %al,(%rax)
 443:	00 20                	add    %ah,(%rax)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 50 00             	add    %dl,0x0(%rax)
 45a:	00 00                	add    %al,(%rax)
 45c:	12 00                	adc    (%rax),%al
	...
 46e:	00 00                	add    %al,(%rax)
 470:	66 00 00             	data16 add %al,(%rax)
 473:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000488 <.dynstr>:
 488:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 48c:	6d                   	insl   (%dx),%es:(%rdi)
 48d:	2e 73 6f             	jae,pn 4ff <_init-0xb01>
 490:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%rdi)
 495:	54                   	push   %rsp
 496:	4d 5f                	rex.WRB pop %r15
 498:	64 65 72 65          	fs gs jb 501 <_init-0xaff>
 49c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4a3:	4d 
 4a4:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 4a7:	6e                   	outsb  %ds:(%rsi),(%dx)
 4a8:	65 54                	gs push %rsp
 4aa:	61                   	(bad)  
 4ab:	62                   	(bad)  
 4ac:	6c                   	insb   (%dx),%es:(%rdi)
 4ad:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4b1:	67 6d                	insl   (%dx),%es:(%edi)
 4b3:	6f                   	outsl  %ds:(%rsi),(%dx)
 4b4:	6e                   	outsb  %ds:(%rsi),(%dx)
 4b5:	5f                   	pop    %rdi
 4b6:	73 74                	jae    52c <_init-0xad4>
 4b8:	61                   	(bad)  
 4b9:	72 74                	jb     52f <_init-0xad1>
 4bb:	5f                   	pop    %rdi
 4bc:	5f                   	pop    %rdi
 4bd:	00 5f 49             	add    %bl,0x49(%rdi)
 4c0:	54                   	push   %rsp
 4c1:	4d 5f                	rex.WRB pop %r15
 4c3:	72 65                	jb     52a <_init-0xad6>
 4c5:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4cc:	4d 
 4cd:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 4d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 4d1:	65 54                	gs push %rsp
 4d3:	61                   	(bad)  
 4d4:	62                   	(bad)  
 4d5:	6c                   	insb   (%dx),%es:(%rdi)
 4d6:	65 00 73 71          	add    %dh,%gs:0x71(%rbx)
 4da:	72 74                	jb     550 <_init-0xab0>
 4dc:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4e0:	63 2e                	movslq (%rsi),%ebp
 4e2:	73 6f                	jae    553 <_init-0xaad>
 4e4:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 4e9:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 4f0:	63 78 61             	movslq 0x61(%rax),%edi
 4f3:	5f                   	pop    %rdi
 4f4:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4fa:	7a 65                	jp     561 <_init-0xa9f>
 4fc:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4ff:	6c                   	insb   (%dx),%es:(%rdi)
 500:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 507:	72 74                	jb     57d <_init-0xa83>
 509:	5f                   	pop    %rdi
 50a:	6d                   	insl   (%dx),%es:(%rdi)
 50b:	61                   	(bad)  
 50c:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 513:	43 5f                	rex.XB pop %r15
 515:	32 2e                	xor    (%rsi),%ch
 517:	32 2e                	xor    (%rsi),%ch
 519:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

000000000000051c <.gnu.version>:
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	02 00                	add    (%rax),%al
 522:	02 00                	add    (%rax),%al
 524:	00 00                	add    %al,(%rax)
 526:	00 00                	add    %al,(%rax)
 528:	03 00                	add    (%rax),%eax
 52a:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000530 <.gnu.version_r>:
 530:	01 00                	add    %eax,(%rax)
 532:	01 00                	add    %eax,(%rax)
 534:	01 00                	add    %eax,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	10 00                	adc    %al,(%rax)
 53a:	00 00                	add    %al,(%rax)
 53c:	20 00                	and    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	75 1a                	jne    55c <_init-0xaa4>
 542:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 548:	87 00                	xchg   %eax,(%rax)
 54a:	00 00                	add    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	01 00                	add    %eax,(%rax)
 552:	01 00                	add    %eax,(%rax)
 554:	55                   	push   %rbp
 555:	00 00                	add    %al,(%rax)
 557:	00 10                	add    %dl,(%rax)
 559:	00 00                	add    %al,(%rax)
 55b:	00 00                	add    %al,(%rax)
 55d:	00 00                	add    %al,(%rax)
 55f:	00 75 1a             	add    %dh,0x1a(%rbp)
 562:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 568:	87 00                	xchg   %eax,(%rax)
 56a:	00 00                	add    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000570 <.rela.dyn>:
 570:	a0 3d 00 00 00 00 00 	movabs 0x80000000000003d,%al
 577:	00 08 
 579:	00 00                	add    %al,(%rax)
 57b:	00 00                	add    %al,(%rax)
 57d:	00 00                	add    %al,(%rax)
 57f:	00 60 11             	add    %ah,0x11(%rax)
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	a8 3d                	test   $0x3d,%al
 58a:	00 00                	add    %al,(%rax)
 58c:	00 00                	add    %al,(%rax)
 58e:	00 00                	add    %al,(%rax)
 590:	08 00                	or     %al,(%rax)
 592:	00 00                	add    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	20 11                	and    %dl,(%rcx)
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	08 40 00             	or     %al,0x0(%rax)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 08                	add    %cl,(%rax)
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 00                	add    %al,(%rax)
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 08                	add    %cl,(%rax)
 5b1:	40 00 00             	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	d8 3f                	fdivrs (%rdi)
 5ba:	00 00                	add    %al,(%rax)
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	06                   	(bad)  
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 01                	add    %al,(%rcx)
	...
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 e0                	add    %ah,%al
 5d1:	3f                   	(bad)  
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	06                   	(bad)  
 5d9:	00 00                	add    %al,(%rax)
 5db:	00 03                	add    %al,(%rbx)
	...
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 e8                	add    %ch,%al
 5e9:	3f                   	(bad)  
 5ea:	00 00                	add    %al,(%rax)
 5ec:	00 00                	add    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	06                   	(bad)  
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5fe:	00 00                	add    %al,(%rax)
 600:	f0 3f                	lock (bad) 
 602:	00 00                	add    %al,(%rax)
 604:	00 00                	add    %al,(%rax)
 606:	00 00                	add    %al,(%rax)
 608:	06                   	(bad)  
 609:	00 00                	add    %al,(%rax)
 60b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 611 <_init-0x9ef>
 611:	00 00                	add    %al,(%rax)
 613:	00 00                	add    %al,(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 f8                	add    %bh,%al
 619:	3f                   	(bad)  
 61a:	00 00                	add    %al,(%rax)
 61c:	00 00                	add    %al,(%rax)
 61e:	00 00                	add    %al,(%rax)
 620:	06                   	(bad)  
 621:	00 00                	add    %al,(%rax)
 623:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000630 <.rela.plt>:
 630:	c8 3f 00 00          	enterq $0x3f,$0x0
 634:	00 00                	add    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	07                   	(bad)  
 639:	00 00                	add    %al,(%rax)
 63b:	00 02                	add    %al,(%rdx)
	...
 645:	00 00                	add    %al,(%rax)
 647:	00 d0                	add    %dl,%al
 649:	3f                   	(bad)  
 64a:	00 00                	add    %al,(%rax)
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	07                   	(bad)  
 651:	00 00                	add    %al,(%rax)
 653:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	pushq  0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmpq *0x2f93(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmpq *0x2f9d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <printf@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmpq *0x2f5d(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <sqrt@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmpq *0x2f55(%rip)        # 3fd0 <sqrt@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	4c 8d 05 96 01 00 00 	lea    0x196(%rip),%r8        # 1230 <__libc_csu_fini>
    109a:	48 8d 0d 1f 01 00 00 	lea    0x11f(%rip),%rcx        # 11c0 <__libc_csu_init>
    10a1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1169 <main>
    10a8:	ff 15 32 2f 00 00    	callq  *0x2f32(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ae:	f4                   	hlt    
    10af:	90                   	nop

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	callq  1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	callq  10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	retq   
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001169 <main>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	48 83 ec 10          	sub    $0x10,%rsp
    1175:	f2 0f 10 05 9b 0e 00 	movsd  0xe9b(%rip),%xmm0        # 2018 <_IO_stdin_used+0x18>
    117c:	00 
    117d:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    1182:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1186:	66 48 0f 6e c0       	movq   %rax,%xmm0
    118b:	e8 e0 fe ff ff       	callq  1070 <sqrt@plt>
    1190:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1195:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    119d:	66 48 0f 6e c0       	movq   %rax,%xmm0
    11a2:	48 8d 3d 5f 0e 00 00 	lea    0xe5f(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    11a9:	b8 01 00 00 00       	mov    $0x1,%eax
    11ae:	e8 ad fe ff ff       	callq  1060 <printf@plt>
    11b3:	b8 00 00 00 00       	mov    $0x0,%eax
    11b8:	c9                   	leaveq 
    11b9:	c3                   	retq   
    11ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000011c0 <__libc_csu_init>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	41 57                	push   %r15
    11c6:	4c 8d 3d d3 2b 00 00 	lea    0x2bd3(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    11cd:	41 56                	push   %r14
    11cf:	49 89 d6             	mov    %rdx,%r14
    11d2:	41 55                	push   %r13
    11d4:	49 89 f5             	mov    %rsi,%r13
    11d7:	41 54                	push   %r12
    11d9:	41 89 fc             	mov    %edi,%r12d
    11dc:	55                   	push   %rbp
    11dd:	48 8d 2d c4 2b 00 00 	lea    0x2bc4(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    11e4:	53                   	push   %rbx
    11e5:	4c 29 fd             	sub    %r15,%rbp
    11e8:	48 83 ec 08          	sub    $0x8,%rsp
    11ec:	e8 0f fe ff ff       	callq  1000 <_init>
    11f1:	48 c1 fd 03          	sar    $0x3,%rbp
    11f5:	74 1f                	je     1216 <__libc_csu_init+0x56>
    11f7:	31 db                	xor    %ebx,%ebx
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1200:	4c 89 f2             	mov    %r14,%rdx
    1203:	4c 89 ee             	mov    %r13,%rsi
    1206:	44 89 e7             	mov    %r12d,%edi
    1209:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    120d:	48 83 c3 01          	add    $0x1,%rbx
    1211:	48 39 dd             	cmp    %rbx,%rbp
    1214:	75 ea                	jne    1200 <__libc_csu_init+0x40>
    1216:	48 83 c4 08          	add    $0x8,%rsp
    121a:	5b                   	pop    %rbx
    121b:	5d                   	pop    %rbp
    121c:	41 5c                	pop    %r12
    121e:	41 5d                	pop    %r13
    1220:	41 5e                	pop    %r14
    1222:	41 5f                	pop    %r15
    1224:	c3                   	retq   
    1225:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    122c:	00 00 00 00 

0000000000001230 <__libc_csu_fini>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	c3                   	retq   

Disassembly of section .fini:

0000000000001238 <_fini>:
    1238:	f3 0f 1e fa          	endbr64 
    123c:	48 83 ec 08          	sub    $0x8,%rsp
    1240:	48 83 c4 08          	add    $0x8,%rsp
    1244:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	44                   	rex.R
    2009:	4f                   	rex.WRXB
    200a:	42 55                	rex.X push %rbp
    200c:	4c                   	rex.WR
    200d:	45 20 25 67 0a 00 00 	and    %r12b,0xa67(%rip)        # 2a7b <__FRAME_END__+0x90f>
	...
    201c:	00 00                	add    %al,(%rax)
    201e:	30                   	.byte 0x30
    201f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000002020 <__GNU_EH_FRAME_HDR>:
    2020:	01 1b                	add    %ebx,(%rbx)
    2022:	03 3b                	add    (%rbx),%edi
    2024:	44 00 00             	add    %r8b,(%rax)
    2027:	00 07                	add    %al,(%rdi)
    2029:	00 00                	add    %al,(%rax)
    202b:	00 00                	add    %al,(%rax)
    202d:	f0 ff                	lock (bad) 
    202f:	ff                   	(bad)  
    2030:	78 00                	js     2032 <__GNU_EH_FRAME_HDR+0x12>
    2032:	00 00                	add    %al,(%rax)
    2034:	30 f0                	xor    %dh,%al
    2036:	ff                   	(bad)  
    2037:	ff a0 00 00 00 40    	jmpq   *0x40000000(%rax)
    203d:	f0 ff                	lock (bad) 
    203f:	ff                   	(bad)  
    2040:	b8 00 00 00 60       	mov    $0x60000000,%eax
    2045:	f0 ff                	lock (bad) 
    2047:	ff 60 00             	jmpq   *0x0(%rax)
    204a:	00 00                	add    %al,(%rax)
    204c:	49 f1                	rex.WB icebp 
    204e:	ff                   	(bad)  
    204f:	ff d0                	callq  *%rax
    2051:	00 00                	add    %al,(%rax)
    2053:	00 a0 f1 ff ff f0    	add    %ah,-0xf00000f(%rax)
    2059:	00 00                	add    %al,(%rax)
    205b:	00 10                	add    %dl,(%rax)
    205d:	f2 ff                	repnz (bad) 
    205f:	ff                   	(bad)  
    2060:	38 01                	cmp    %al,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000002068 <__FRAME_END__-0x104>:
    2068:	14 00                	adc    $0x0,%al
    206a:	00 00                	add    %al,(%rax)
    206c:	00 00                	add    %al,(%rax)
    206e:	00 00                	add    %al,(%rax)
    2070:	01 7a 52             	add    %edi,0x52(%rdx)
    2073:	00 01                	add    %al,(%rcx)
    2075:	78 10                	js     2087 <__GNU_EH_FRAME_HDR+0x67>
    2077:	01 1b                	add    %ebx,(%rbx)
    2079:	0c 07                	or     $0x7,%al
    207b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2081:	00 00                	add    %al,(%rax)
    2083:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2086:	00 00                	add    %al,(%rax)
    2088:	f8                   	clc    
    2089:	ef                   	out    %eax,(%dx)
    208a:	ff                   	(bad)  
    208b:	ff 2f                	ljmp   *(%rdi)
    208d:	00 00                	add    %al,(%rax)
    208f:	00 00                	add    %al,(%rax)
    2091:	44 07                	rex.R (bad) 
    2093:	10 00                	adc    %al,(%rax)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 24 00             	add    %ah,(%rax,%rax,1)
    209a:	00 00                	add    %al,(%rax)
    209c:	34 00                	xor    $0x0,%al
    209e:	00 00                	add    %al,(%rax)
    20a0:	80 ef ff             	sub    $0xff,%bh
    20a3:	ff 30                	pushq  (%rax)
    20a5:	00 00                	add    %al,(%rax)
    20a7:	00 00                	add    %al,(%rax)
    20a9:	0e                   	(bad)  
    20aa:	10 46 0e             	adc    %al,0xe(%rsi)
    20ad:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b0:	0b 77 08             	or     0x8(%rdi),%esi
    20b3:	80 00 3f             	addb   $0x3f,(%rax)
    20b6:	1a 3a                	sbb    (%rdx),%bh
    20b8:	2a 33                	sub    (%rbx),%dh
    20ba:	24 22                	and    $0x22,%al
    20bc:	00 00                	add    %al,(%rax)
    20be:	00 00                	add    %al,(%rax)
    20c0:	14 00                	adc    $0x0,%al
    20c2:	00 00                	add    %al,(%rax)
    20c4:	5c                   	pop    %rsp
    20c5:	00 00                	add    %al,(%rax)
    20c7:	00 88 ef ff ff 10    	add    %cl,0x10ffffef(%rax)
	...
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 14 00             	add    %dl,(%rax,%rax,1)
    20da:	00 00                	add    %al,(%rax)
    20dc:	74 00                	je     20de <__GNU_EH_FRAME_HDR+0xbe>
    20de:	00 00                	add    %al,(%rax)
    20e0:	80 ef ff             	sub    $0xff,%bh
    20e3:	ff 20                	jmpq   *(%rax)
	...
    20ed:	00 00                	add    %al,(%rax)
    20ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20f2:	00 00                	add    %al,(%rax)
    20f4:	8c 00                	mov    %es,(%rax)
    20f6:	00 00                	add    %al,(%rax)
    20f8:	71 f0                	jno    20ea <__GNU_EH_FRAME_HDR+0xca>
    20fa:	ff                   	(bad)  
    20fb:	ff 51 00             	callq  *0x0(%rcx)
    20fe:	00 00                	add    %al,(%rax)
    2100:	00 45 0e             	add    %al,0xe(%rbp)
    2103:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2109:	02 48 0c             	add    0xc(%rax),%cl
    210c:	07                   	(bad)  
    210d:	08 00                	or     %al,(%rax)
    210f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    2113:	00 ac 00 00 00 a8 f0 	add    %ch,-0xf580000(%rax,%rax,1)
    211a:	ff                   	(bad)  
    211b:	ff 65 00             	jmpq   *0x0(%rbp)
    211e:	00 00                	add    %al,(%rax)
    2120:	00 46 0e             	add    %al,0xe(%rsi)
    2123:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2129:	8e 03                	mov    (%rbx),%es
    212b:	45 0e                	rex.RB (bad) 
    212d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2133:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302f7d <_end+0xffffffff862fef65>
    2139:	06                   	(bad)  
    213a:	48 0e                	rex.W (bad) 
    213c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2142:	6e                   	outsb  %ds:(%rsi),(%dx)
    2143:	0e                   	(bad)  
    2144:	38 41 0e             	cmp    %al,0xe(%rcx)
    2147:	30 41 0e             	xor    %al,0xe(%rcx)
    214a:	28 42 0e             	sub    %al,0xe(%rdx)
    214d:	20 42 0e             	and    %al,0xe(%rdx)
    2150:	18 42 0e             	sbb    %al,0xe(%rdx)
    2153:	10 42 0e             	adc    %al,0xe(%rdx)
    2156:	08 00                	or     %al,(%rax)
    2158:	10 00                	adc    %al,(%rax)
    215a:	00 00                	add    %al,(%rax)
    215c:	f4                   	hlt    
    215d:	00 00                	add    %al,(%rax)
    215f:	00 d0                	add    %dl,%al
    2161:	f0 ff                	lock (bad) 
    2163:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2169 <__GNU_EH_FRAME_HDR+0x149>
    2169:	00 00                	add    %al,(%rax)
	...

000000000000216c <__FRAME_END__>:
    216c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003da0 <__frame_dummy_init_array_entry>:
    3da0:	60                   	(bad)  
    3da1:	11 00                	adc    %eax,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003da8 <__do_global_dtors_aux_fini_array_entry>:
    3da8:	20 11                	and    %dl,(%rcx)
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003db0 <_DYNAMIC>:
    3db0:	01 00                	add    %eax,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	01 00                	add    %eax,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	01 00                	add    %eax,(%rax)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	55                   	push   %rbp
    3dc9:	00 00                	add    %al,(%rax)
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	00 10                	add    %dl,(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	0d 00 00 00 00       	or     $0x0,%eax
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 38                	add    %bh,(%rax)
    3de9:	12 00                	adc    (%rax),%al
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 19                	add    %bl,(%rcx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 a0 3d 00 00 00    	add    %ah,0x3d(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1b                	add    %bl,(%rbx)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 08                	add    %cl,(%rax)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 1a                	add    %bl,(%rdx)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	08 00                	or     %al,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	f5                   	cmc    
    3e31:	fe                   	(bad)  
    3e32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e45 <_DYNAMIC+0x95>
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 88 04 00 00 00    	add    %cl,0x4(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 06                	add    %al,(%rsi)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 c8                	add    %cl,%al
    3e59:	03 00                	add    (%rax),%eax
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 0a                	add    %cl,(%rdx)
    3e61:	00 00                	add    %al,(%rax)
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 93 00 00 00 00    	add    %dl,0x0(%rbx)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 0b                	add    %cl,(%rbx)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 18                	add    %bl,(%rax)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e85 <_DYNAMIC+0xd5>
	...
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 03                	add    %al,(%rbx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 02                	add    %al,(%rdx)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 30                	add    %dh,(%rax)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	07                   	(bad)  
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 17                	add    %dl,(%rdi)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 30                	add    %dh,(%rax)
    3ec9:	06                   	(bad)  
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	07                   	(bad)  
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 70 05             	add    %dh,0x5(%rax)
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	08 00                	or     %al,(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	c0 00 00             	rolb   $0x0,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 09                	add    %cl,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 18                	add    %bl,(%rax)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 1e                	add    %bl,(%rsi)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 08                	add    %cl,(%rax)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 fb                	add    %bh,%bl
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 01                	add    %al,(%rcx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	08 00                	or     %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 fe                	add    %bh,%dh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 30                	add    %dh,(%rax)
    3f29:	05 00 00 00 00       	add    $0x0,%eax
    3f2e:	00 00                	add    %al,(%rax)
    3f30:	ff                   	(bad)  
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 02                	add    %al,(%rdx)
    3f39:	00 00                	add    %al,(%rax)
    3f3b:	00 00                	add    %al,(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 f0                	add    %dh,%al
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 1c 05 00 00 00 00 	add    %bl,0x0(,%rax,1)
    3f4e:	00 00                	add    %al,(%rax)
    3f50:	f9                   	stc    
    3f51:	ff                   	(bad)  
    3f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb0 <_GLOBAL_OFFSET_TABLE_>:
    3fb0:	b0 3d                	mov    $0x3d,%al
	...
    3fc6:	00 00                	add    %al,(%rax)
    3fc8:	30 10                	xor    %dl,(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	40 10 00             	adc    %al,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <completed.8060>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f730>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
